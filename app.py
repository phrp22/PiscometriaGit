import streamlit as st
from auth import get_user
from main_layout import render_main_layout
from dashboard import render_dashboard, render_professional_dashboard
from profile import render_onboarding_questionnaire
from utils.design_utils import load_css
from utils.professional_utils import is_professional_enabled
from utils.user_utils import get_user_info

# Configura√ß√£o inicial.
# Definimos t√≠tulo, √≠cone e o layout central.
st.set_page_config(
    page_title="Academia Diagn√≥stica",
    page_icon="üß†",
    layout="centered",
    initial_sidebar_state="collapsed"
)


# üåê Fun√ß√£o para inicializar a sess√£o e evitar erros de navega√ß√£o.
def initialize_session_state():
    # Se a sess√£o ainda n√£o estiver definida...
    if "user" not in st.session_state:
        st.session_state["user"] = None  # Definimos o usu√°rio como n√£o autenticado.
    # E se o processamento das p√°ginas ainda n√£o foi iniciado...
    if "processing" not in st.session_state:
        st.session_state["processing"] = False # √â porque ainda n√£o h√° nada para ser processado.


# üß≠ Fun√ß√£o principal que tudo controla.
def main():
    initialize_session_state() # Estabelece os ponteiros onde tudo se desenrola.
    load_css() # E tamb√©m cria o visual que √© fundamental.
    user = get_user()  # Al√©m de verificar quem est√° navegando. Retorna um dicion√°rio com o ID do Supabse Auth, email e display_name do usu√°rio.

    # Se temos um usu√°rio com ID logado na sess√£o...
    if user and "id" in user:
        user_id = user["id"]  # Guardamos o ID para ser utilizado nas fun√ß√µes.

        # Busca as informa√ß√µes do perfil do usu√°rio com todos os campos. Retorna um dicion√°rio contendo os dados completos do usu√°rio.
        user_profile = get_user_info(user_id, full_profile=True)
        # Busca quais usu√°rios s√£o profissionais. Retorna um dicion√°rio com auth_user_id, email e area_habilitada do usu√°rio.
        is_professional = is_professional_enabled(user_id)

        # Se o question√°rio de cadastro ainda n√£o foi respondido...
        if not user_profile or not user_profile.get("genero"):
            render_onboarding_questionnaire(user_id, user["email"]) # Renderizamos o question√°rio de cadastro.

        # Mas...
        else:
            # Se o usu√°rio √© profissional...
            if is_professional:
                render_professional_dashboard(user) # Exibe um dashboard especial.
            # Caso contr√°rio...
            else:
                render_dashboard() # Fica o dashboard normal.

    # Entretanto, se ningu√©m est√° logado...
    else:
        render_main_layout()  # Renderizamos o layout principal.


# ‚èØÔ∏è Executa o c√≥digo, sem mais demora.
if __name__ == "__main__":
    main() # Chamando main() e come√ßando a hist√≥ria!
