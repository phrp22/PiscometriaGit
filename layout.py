import streamlit as st
import pathlib
from auth import sign_in, sign_up, reset_password

def render_main_layout():
    """Renderiza a interface principal com op√ß√µes de Login e Cadastro."""

    st.markdown("# Abaet√© üå±")

    # Texto laranja estilizado e aumentado para maior destaque
    st.markdown(
        """
        <h1 style='color: #FFA500; font-size: 28px; font-weight: bold;'>
        Um sistema inteligente que cuida de voc√™!</h1>
        """,
        unsafe_allow_html=True
    )

    st.markdown("""
    ##### üíª **Transforme a sua pr√°tica cl√≠nica com tecnologia avan√ßada:**
    
    - **Crie uma conta profissional** e acesse um ambiente especializado para profissionais da sa√∫de mental.
    - **Cadastre pacientes e acompanhe sua trajet√≥ria cl√≠nica** com dados organizados em tempo real.
    - **Aplique avalia√ß√µes informatizadas** e obtenha resultados r√°pidos e padronizados.
    - **Utilize nossas corre√ß√µes automatizadas** para garantir mais precis√£o na interpreta√ß√£o dos dados.
    - **Monitore a evolu√ß√£o longitudinalmente** observando padr√µes ao longo do tempo.
    
    üéØ **Tenha em m√£os um sistema inteligente e baseado em evid√™ncias.**  
    üîç **Eleve sua pr√°tica profissional e ofere√ßa um acompanhamento mais eficaz e personalizado.**  
    """)

    st.divider()

    option = st.radio("Escolha uma op√ß√£o:", ["Login", "Cadastro"], horizontal=True)

    email = st.text_input("Email", key="email_input")
    password = st.text_input("Senha", type="password", key="password_input")

    display_name = None
    confirm_password = None

    if option == "Cadastro":
        confirm_password = st.text_input("Confirme a Senha", type="password", key="confirm_password_input")
        display_name = st.text_input("Nome de usu√°rio", key="display_name_input")

    if option == "Login" and "account_created" in st.session_state:
        del st.session_state["account_created"]

    action_text = "Entrar" if option == "Login" else "ü™Ñ Criar Conta"

    # Bot√£o para Login/Cadastro
    if st.button(action_text, key="authaction", use_container_width=True):
        if not email or not password:
            st.warning("‚ö†Ô∏è O preenchimento autom√°tico foi desabilitado por motivos de seguran√ßa. Por favor, preencha todos os campos antes de continuar.")
        else:
            if option == "Login":
                user, message = sign_in(email, password)
                if user:
                    st.session_state["user"] = user
                    st.session_state["refresh"] = True
                    st.rerun()
                else:
                    st.error(f"‚ùå Erro ao logar: {message}")
            else:
                # Valida√ß√£o de Cadastro
                if not display_name or not confirm_password:
                    st.warning("‚ö†Ô∏è Todos os campos s√£o obrigat√≥rios. Preencha todos antes de continuar.")
                elif password != confirm_password:
                    st.error("‚ùå As senhas n√£o coincidem. Tente novamente.")
                else:
                    user, message = sign_up(email, password, confirm_password, display_name)
                    if user:
                        st.session_state["account_created"] = True
                        st.success("üì© Um e-mail de verifica√ß√£o foi enviado para a sua caixa de entrada.")
                        st.session_state["refresh"] = True
                        st.rerun()
                    else:
                        st.error(message)

    # Bot√£o para recupera√ß√£o de senha
    if option == "Login":
        if st.button("üîì Recuperar Senha", key="resetpassword", use_container_width=True):
            if email:
                message = reset_password(email)
                st.info(message)
            else:
                st.warning("‚ö†Ô∏è Por favor, insira seu email antes de redefinir a senha.")
